/*
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package ir.notifaano.server.models;

import java.util.*;

public class EarthquakeBuilder {
    //the instance to build
    private Earthquake earthquake;

    /**
     * Default constructor to initialize the instance
     */
    public EarthquakeBuilder() {
        earthquake = new Earthquake();
    }

    public EarthquakeBuilder hasPlan(boolean hasPlan) {
        earthquake.setHasPlan(hasPlan);
        return this;
    }

    public EarthquakeBuilder insuranceCentreProvinceId(int insuranceCentreProvinceId) {
        earthquake.setInsuranceCentreProvinceId(insuranceCentreProvinceId);
        return this;
    }

    public EarthquakeBuilder insuranceCentreCityId(int insuranceCentreCityId) {
        earthquake.setInsuranceCentreCityId(insuranceCentreCityId);
        return this;
    }

    public EarthquakeBuilder insuranceCentreCities(List<ComboDataModel> insuranceCentreCities) {
        earthquake.setInsuranceCentreCities(insuranceCentreCities);
        return this;
    }

    public EarthquakeBuilder buildingTypes(List<ComboDataModel> buildingTypes) {
        earthquake.setBuildingTypes(buildingTypes);
        return this;
    }

    public EarthquakeBuilder skeletonTypeBuildings(List<ComboDataModel> skeletonTypeBuildings) {
        earthquake.setSkeletonTypeBuildings(skeletonTypeBuildings);
        return this;
    }

    public EarthquakeBuilder buildingUseTypes(List<ComboDataModel> buildingUseTypes) {
        earthquake.setBuildingUseTypes(buildingUseTypes);
        return this;
    }

    public EarthquakeBuilder insurancePolicyTerms(List<InsurancePolicyTerm> insurancePolicyTerms) {
        earthquake.setInsurancePolicyTerms(insurancePolicyTerms);
        return this;
    }

    public EarthquakeBuilder insuranceExtraCoverage(List<String> insuranceExtraCoverage) {
        earthquake.setInsuranceExtraCoverage(insuranceExtraCoverage);
        return this;
    }

    public EarthquakeBuilder everySquareMeterCoverage(List<EverySquareMeterCoverage> everySquareMeterCoverage) {
        earthquake.setEverySquareMeterCoverage(everySquareMeterCoverage);
        return this;
    }

    public EarthquakeBuilder provinces(List<Province> provinces) {
        earthquake.setProvinces(provinces);
        return this;
    }

    public EarthquakeBuilder cities(List<String> cities) {
        earthquake.setCities(cities);
        return this;
    }

    public EarthquakeBuilder cityRegions(List<String> cityRegions) {
        earthquake.setCityRegions(cityRegions);
        return this;
    }

    public EarthquakeBuilder shippingTypes(List<ShippingType> shippingTypes) {
        earthquake.setShippingTypes(shippingTypes);
        return this;
    }

    public EarthquakeBuilder postTypes(List<PostType> postTypes) {
        earthquake.setPostTypes(postTypes);
        return this;
    }

    public EarthquakeBuilder insurancePolicyCondition(InsurancePolicyCondition insurancePolicyCondition) {
        earthquake.setInsurancePolicyCondition(insurancePolicyCondition);
        return this;
    }

    public EarthquakeBuilder insuranceData(InsuranceDataFireInsurance insuranceData) {
        earthquake.setInsuranceData(insuranceData);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public Earthquake build() {
        return earthquake;
    }
}